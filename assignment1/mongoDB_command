[SQ1] 1ms
db.getCollection('posts').aggregate([
{$match: {$or: [{Id: 1}, {ParentId: 1}]}},
{$group: {_id: "$OwnerUser.Id", userDetail:{$first: "$OwnerUser"}}}
])

[SQ2] 6ms
db.getCollection('posts').aggregate([
{$match: {Tags: "neural-networks", PostTypeId: 1}},
{$sort: {ViewCount: -1}},
{$limit: 1}
])

[AQ1] 7ms
db.getCollection('posts').aggregate([
{$match:{Tags: {$in: ["neural-networks", "terminology"] }, PostTypeId: 1, AcceptedAnswer: {$exists: true}}},
{$unwind: "$Tags"},
{$match: {Tags: {$in: ["neural-networks", "terminology"]}}},
{$project: {_id: 0, Id: "$Id", Tags: "$Tags", Title: "$Title", gap: {$subtract: ["$AcceptedAnswer.CreationDate", "$CreationDate"]}}},
{$sort: {gap: 1}},
{$group: {_id: "$Tags", Id: {$first: "$Id"}, Title: {$first: "$Title"}}}
])

[AQ2] 8ms
db.getCollection('posts').aggregate([
{$match: {CreationDate: {$gt: ISODate("2018-08-01T00:00:00"), $lt: ISODate("2018-08-31T00:00:00")}}},
{$unwind: "$Tags"},
{$group: {_id: {Tag: "$Tags", OwnerUserId: "$OwnerUser.Id"}, sum: {$sum: 1}}},
{$group: {_id: "$_id.Tag", sumOfPosts: {$sum: 1}}},
{$sort: {sumOfPosts: -1}},
{$limit: 5}
])

[AQ3] 4ms
db.getCollection('posts').aggregate([
{$match: {Tags: "deep-learning", PostTypeId: 2, IsAccepted: true}},
{$group: {_id: "$OwnerUser.Id", AcceptedQuestionId: {$addToSet: "$ParentId"}}},
{$project: {_id: 0, UserId: "$_id", AcceptedQuestionId: "$AcceptedQuestionId", num: {$size: "$AcceptedQuestionId"}}},
{$sort: {num: -1}},
{$limit: 1},
{$unwind: "$AcceptedQuestionId"},
{$lookup:{
    from: "posts",
    localField: "AcceptedQuestionId",
    foreignField: "Id",
    as: "question_detail"}},
{$project: {UserId: "$UserId", QuestionId: "$AcceptedQuestionId", Title: "$question_detail.Title"}},
{$sort: {Id: 1}}
])