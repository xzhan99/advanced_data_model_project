// Load Post.tsv
load csv with headers from "file:///data/Posts.tsv" as line fieldterminator "\t"
create (p:Post{Id:line.Id,PostTypeId:line.PostTypeId,AcceptedAnswerId:line.AcceptedAnswerId,CreationDate:line.CreationDate,
Score:line.Score,ViewCount:line.ViewCount,OwnerUserId:line.OwnerUserId,Title:line.Title,Tags:line.Tags,AnswerCount:line.AnswerCount,
CommentCount:line.CommentCount,FavoriteCount:line.FavorateCount,ParentId:line.ParentId,ClosedDate:line.ClosedDate,OwnerDisplayName:line.OwnerDisplayName})
return p

//
Load csv with headers from "file:///data/tags.tsv" as line fieldterminator "\t"
create (t:Tags{Id:line.Id,TagName:line.TagName,cnt:line.Count})
return t

//
LOAD CSV WITH HEADERS FROM "file:///data/Votes.tsv" as line FIELDTERMINATOR "\t"
Create(v:Votes{Id:line.Id,PostId:line.PostId,VotesTypeId:line.VoteTypeId
,CreationDate:line.CreationDate,UserId:line.UserId,BountyAmount:line.BountyAmount})
return v

//
LOAD CSV WITH HEADERS FROM "file:///data/Users.tsv" as line FIELDTERMINATOR "\t"
create(u:Users{Id:line.Id,Reputation:line.Reputation,CreationDate:line.CreationDate
,DisplayName:line.DisplayName,LastAccessDate:line.LastAccessDate,Location:line.Location
,Views:line.Views,UpVotes:line.UpVotes,DownVotes:line.DownVotes})
return u

//
match (p1:Post),(p2:Post)
where p1.Id = p2.ParentId
create (p1)-[:question_of]->(p2)

match(p1:Post),(p2:Post)
where p1.AcceptedAnswerId = p2.Id
create(p2)-[:answer_of]->(p1)

//
match(p:Post),(u:Users)
where p.OwnerUserId = u.Id
create (u)-[:posted]->(p)

//
match(p:Post),(t:Tags)
where p.Tags contains  t.TagName
create(p)-[:belongs_to]->(t)

//
match (p:Post),(v:Votes)
where p.Id = v.PostId
create (p)-[:has_votes]->(v)

//Simple Query 1:
match (u1:Users)--(:Post{Id:"2"})-[:question_of]->(:Post)--(u2:Users) return u1,u2

//Simple Query 2:
match(p:Post)-[:belongs_to]->(:Tags{TagName:"neurons"})
return p
order by toInt(p.ViewCount) DESC limit 1

//AQ4
match (u:Users{Id:"4398"})-[:posted]->(:Post)-[:answer_of]-(:Post)-[:belongs_to]->(t:Tags)<-[:belongs_to]-(p2:Post)
with p2,t,count(t.TagName) as occurrence
where occurrence>=4
and p2.AcceptedAnswerId is null
and p2.CreationDate<"2018-08-30T00:00:00"
return distinct p2.Id,p2.Title, p2.CreationDate
order by p2.CreationDate DESC
limit 5
